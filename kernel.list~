
build/output.elf:     file format elf32-littlearm

Disassembly of section .init:

00008000 <_start>:
    8000:	ea00002b 	b	80b4 <main>
    8004:	e1a00000 	nop			(mov r0,r0)
    8008:	e1a00000 	nop			(mov r0,r0)
    800c:	e1a00000 	nop			(mov r0,r0)
    8010:	e1a00000 	nop			(mov r0,r0)
    8014:	e1a00000 	nop			(mov r0,r0)
    8018:	e1a00000 	nop			(mov r0,r0)
Disassembly of section .text:

0000801c <GetGpioAddress>:
    801c:	e59f008c 	ldr	r0, [pc, #140]	; 80b0 <SetGpio+0x3c>
    8020:	e1a0f00e 	mov	pc, lr

00008024 <SetGpioFunction>:
    8024:	e3500035 	cmp	r0, #53	; 0x35
    8028:	93510007 	cmpls	r1, #7	; 0x7
    802c:	81a0f00e 	movhi	pc, lr
    8030:	e92d4000 	push	{lr}
    8034:	e1a02000 	mov	r2, r0
    8038:	ebfffff7 	bl	801c <GetGpioAddress>

0000803c <functionLoop$>:
    803c:	e3520009 	cmp	r2, #9	; 0x9
    8040:	8242200a 	subhi	r2, r2, #10	; 0xa
    8044:	82800004 	addhi	r0, r0, #4	; 0x4
    8048:	8afffffb 	bhi	803c <functionLoop$>
    804c:	e0822082 	add	r2, r2, r2, lsl #1
    8050:	e1a01211 	lsl	r1, r1, r2
    8054:	e3a03007 	mov	r3, #7	; 0x7
    8058:	e1a03213 	lsl	r3, r3, r2
    805c:	e1e03003 	mvn	r3, r3
    8060:	e5902000 	ldr	r2, [r0]
    8064:	e0022003 	and	r2, r2, r3
    8068:	e1811002 	orr	r1, r1, r2
    806c:	e5801000 	str	r1, [r0]
    8070:	e8bd8000 	pop	{pc}

00008074 <SetGpio>:
    8074:	e3500035 	cmp	r0, #53	; 0x35
    8078:	81a0f00e 	movhi	pc, lr
    807c:	e92d4000 	push	{lr}
    8080:	e1a02000 	mov	r2, r0
    8084:	ebffffe4 	bl	801c <GetGpioAddress>
    8088:	e1a032a2 	lsr	r3, r2, #5
    808c:	e1a03103 	lsl	r3, r3, #2
    8090:	e0800003 	add	r0, r0, r3
    8094:	e202201f 	and	r2, r2, #31	; 0x1f
    8098:	e3a03001 	mov	r3, #1	; 0x1
    809c:	e1a03213 	lsl	r3, r3, r2
    80a0:	e3310000 	teq	r1, #0	; 0x0
    80a4:	05803028 	streq	r3, [r0, #40]
    80a8:	1580301c 	strne	r3, [r0, #28]
    80ac:	e8bd8000 	pop	{pc}
    80b0:	20200000 	.word	0x20200000

000080b4 <main>:
    80b4:	e3a0d902 	mov	sp, #32768	; 0x8000
    80b8:	e3a00010 	mov	r0, #16	; 0x10
    80bc:	e3a01001 	mov	r1, #1	; 0x1
    80c0:	ebffffd7 	bl	8024 <SetGpioFunction>
    80c4:	eb000026 	bl	8164 <EnableIRQ>
    80c8:	eb00001d 	bl	8144 <EnableTimerInterrupt>
    80cc:	e3a000ff 	mov	r0, #255	; 0xff
    80d0:	e3a01000 	mov	r1, #0	; 0x0
    80d4:	eb000015 	bl	8130 <SetTimer>
    80d8:	e3a04000 	mov	r4, #0	; 0x0
    80dc:	e10f1000 	mrs	r1, CPSR
    80e0:	e3c11080 	bic	r1, r1, #128	; 0x80
    80e4:	e121f001 	msr	CPSR_c, r1

000080e8 <loop$>:
    80e8:	eafffffe 	b	80e8 <loop$>

000080ec <GetSystemTimerBase>:
    80ec:	e59f00e4 	ldr	r0, [pc, #228]	; 81d8 <loop$+0x14>
    80f0:	e1a0f00e 	mov	pc, lr

000080f4 <GetInterruptBase>:
    80f4:	e59f00e0 	ldr	r0, [pc, #224]	; 81dc <loop$+0x18>
    80f8:	e1a0f00e 	mov	pc, lr

000080fc <DisableBasicIRQ>:
    80fc:	e59f00d8 	ldr	r0, [pc, #216]	; 81dc <loop$+0x18>
    8100:	e3a01000 	mov	r1, #0	; 0x0
    8104:	e5801224 	str	r1, [r0, #548]
    8108:	e1a0f00e 	mov	pc, lr

0000810c <EnableBasicIRQ>:
    810c:	e59f00c8 	ldr	r0, [pc, #200]	; 81dc <loop$+0x18>
    8110:	e5901218 	ldr	r1, [r0, #536]
    8114:	e3811001 	orr	r1, r1, #1	; 0x1
    8118:	e5801218 	str	r1, [r0, #536]
    811c:	e1a0f00e 	mov	pc, lr

00008120 <GetTimeStamp>:
    8120:	e92d4000 	push	{lr}
    8124:	ebfffff0 	bl	80ec <GetSystemTimerBase>
    8128:	e1c000d4 	ldrd	r0, [r0, #4]
    812c:	e8bd8000 	pop	{pc}

00008130 <SetTimer>:
    8130:	e92d4000 	push	{lr}
    8134:	e1a02000 	mov	r2, r0
    8138:	ebffffed 	bl	80f4 <GetInterruptBase>
    813c:	e5802400 	str	r2, [r0, #1024]
    8140:	e8bd8000 	pop	{pc}

00008144 <EnableTimerInterrupt>:
    8144:	e92d4000 	push	{lr}
    8148:	ebffffe9 	bl	80f4 <GetInterruptBase>
    814c:	e59f108c 	ldr	r1, [pc, #140]	; 81e0 <loop$+0x1c>
    8150:	e5801408 	str	r1, [r0, #1032]
    8154:	e3a00018 	mov	r0, #24	; 0x18
    8158:	e59f1084 	ldr	r1, [pc, #132]	; 81e4 <loop$+0x20>
    815c:	e5801000 	str	r1, [r0]
    8160:	e8bd8000 	pop	{pc}

00008164 <EnableIRQ>:
    8164:	e10f1000 	mrs	r1, CPSR
    8168:	e3c11080 	bic	r1, r1, #128	; 0x80
    816c:	e121f001 	msr	CPSR_c, r1
    8170:	e1a0f00e 	mov	pc, lr

00008174 <DisableIRQ>:
    8174:	e10f1000 	mrs	r1, CPSR
    8178:	e3811080 	orr	r1, r1, #128	; 0x80
    817c:	e121f001 	msr	CPSR_c, r1
    8180:	e1a0f00e 	mov	pc, lr

00008184 <InterruptHandler>:
    8184:	e24ee004 	sub	lr, lr, #4	; 0x4
    8188:	e92d500f 	push	{r0, r1, r2, r3, ip, lr}
    818c:	eb000000 	bl	8194 <timer_isr>
    8190:	e8bd500f 	pop	{r0, r1, r2, r3, ip, lr}

00008194 <timer_isr>:
    8194:	e92d4000 	push	{lr}
    8198:	e3a00010 	mov	r0, #16	; 0x10
    819c:	e3a01000 	mov	r1, #0	; 0x0
    81a0:	ebffffb3 	bl	8074 <SetGpio>
    81a4:	ebffffd2 	bl	80f4 <GetInterruptBase>
    81a8:	e3a01000 	mov	r1, #0	; 0x0
    81ac:	e580140c 	str	r1, [r0, #1036]
    81b0:	e8bd8000 	pop	{pc}

000081b4 <Wait>:
    81b4:	e1a02000 	mov	r2, r0
    81b8:	e92d4000 	push	{lr}
    81bc:	ebffffd7 	bl	8120 <GetTimeStamp>
    81c0:	e1a03000 	mov	r3, r0

000081c4 <loop$>:
    81c4:	ebffffd5 	bl	8120 <GetTimeStamp>
    81c8:	e0401003 	sub	r1, r0, r3
    81cc:	e1510002 	cmp	r1, r2
    81d0:	9afffffb 	bls	81c4 <loop$>
    81d4:	e8bd8000 	pop	{pc}
    81d8:	20003000 	.word	0x20003000
    81dc:	2000b000 	.word	0x2000b000
    81e0:	003e0020 	.word	0x003e0020
    81e4:	00008184 	.word	0x00008184
